(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      3969,        109]
NotebookOptionsPosition[      3616,         95]
NotebookOutlinePosition[      4017,        111]
CellTagsIndexPosition[      3974,        108]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", 
   RowBox[{"41736", ",", 
    RowBox[{"Method", "->", "\"\<Legacy\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"254", ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{".3", ",", ".7"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", "90"}], "]"}], ",", "15"}], 
      "]"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", "SequenceIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["232", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[Mesh -> True, MeshStyle -> GrayLevel[0.15]],
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"RulePlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", "254", "]"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", "SequenceIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["352", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[MeshStyle -> Directive[Thin, 
         GrayLevel[0.15]], FrameStyle -> GrayLevel[0.15]],
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "Left"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8674055367778296`*^9, 3.867405654438636*^9}, {
  3.8674056880995493`*^9, 3.8674056884676194`*^9}, {3.867405939430544*^9, 
  3.867405996220543*^9}, {3.867406026761475*^9, 3.8674060420595026`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"814bc9b9-39c1-43f3-aeaf-f00e2741e9cb"]
},
WindowSize->{808, 755},
WindowMargins->{{123.5, Automatic}, {Automatic, 72}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"429a58f5-6e46-40ec-a278-651f17a86c8e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3054, 73, 78, "Input",ExpressionUUID->"814bc9b9-39c1-43f3-aeaf-f00e2741e9cb"]
}
]
*)

